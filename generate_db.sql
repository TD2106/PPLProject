-- MySQL Script generated by MySQL Workbench
-- Mon Apr 23 22:51:30 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema HospitalReview
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema HospitalReview
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HospitalReview` DEFAULT CHARACTER SET utf8 ;
USE `HospitalReview` ;

-- -----------------------------------------------------
-- Table `HospitalReview`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`user` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(300) NOT NULL,
  `user_type` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`patient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`patient` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`patient` (
  `patient_id` INT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `address` VARCHAR(300) NOT NULL,
  `is_activated` INT NOT NULL,
  INDEX `fk_Patient_User_idx` (`patient_id` ASC),
  PRIMARY KEY (`patient_id`),
  CONSTRAINT `fk_Patient_User`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`hospital`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`hospital` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`hospital` (
  `hospital_id` INT NOT NULL,
  `hospital_name` VARCHAR(200) NOT NULL,
  `address` VARCHAR(300) NOT NULL,
  `website` VARCHAR(300) NOT NULL,
  `hospital_admin_name` VARCHAR(100) NOT NULL,
  `hospital_admin_email` VARCHAR(100) NOT NULL,
  `is_activated` INT NOT NULL,
  INDEX `fk_Hospital_User1_idx` (`hospital_id` ASC),
  PRIMARY KEY (`hospital_id`),
  CONSTRAINT `fk_Hospital_User1`
    FOREIGN KEY (`hospital_id`)
    REFERENCES `HospitalReview`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`patient_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`patient_language` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`patient_language` (
  `patient_id` INT NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  INDEX `fk_PatientLanguage_Patient1_idx` (`patient_id` ASC),
  PRIMARY KEY (`patient_id`, `language`),
  CONSTRAINT `fk_PatientLanguage_Patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`patient` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`general_specialty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`general_specialty` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`general_specialty` (
  `general_specialty_id` INT NOT NULL AUTO_INCREMENT,
  `general_specialty` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`general_specialty_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`doctor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`doctor` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`doctor` (
  `doctor_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `degree` VARCHAR(100) NOT NULL,
  `accept_insurance` INT NOT NULL,
  `office_hour` VARCHAR(45) NOT NULL,
  `hospital_id` INT NOT NULL,
  `general_specialty_id` INT NULL,
  PRIMARY KEY (`doctor_id`),
  INDEX `fk_doctor_hospital1_idx` (`hospital_id` ASC),
  INDEX `fk_doctor_general_specialty1_idx` (`general_specialty_id` ASC),
  CONSTRAINT `fk_doctor_hospital1`
    FOREIGN KEY (`hospital_id`)
    REFERENCES `HospitalReview`.`hospital` (`hospital_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_general_specialty1`
    FOREIGN KEY (`general_specialty_id`)
    REFERENCES `HospitalReview`.`general_specialty` (`general_specialty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`specific_specialty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`specific_specialty` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`specific_specialty` (
  `specific_specialty_id` INT NOT NULL AUTO_INCREMENT,
  `specific_specialty` VARCHAR(100) NOT NULL,
  `general_specialty_id` INT NOT NULL,
  PRIMARY KEY (`specific_specialty_id`),
  INDEX `fk_specific_specialty_general_specialty1_idx` (`general_specialty_id` ASC),
  CONSTRAINT `fk_specific_specialty_general_specialty1`
    FOREIGN KEY (`general_specialty_id`)
    REFERENCES `HospitalReview`.`general_specialty` (`general_specialty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`doctor_specific_specialty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`doctor_specific_specialty` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`doctor_specific_specialty` (
  `specific_specialty_id` INT NOT NULL,
  `doctor_id` INT NOT NULL,
  INDEX `fk_doctor_specific_specialty_specific_specialty1_idx` (`specific_specialty_id` ASC),
  INDEX `fk_doctor_specific_specialty_doctor1_idx` (`doctor_id` ASC),
  PRIMARY KEY (`specific_specialty_id`, `doctor_id`),
  CONSTRAINT `fk_doctor_specific_specialty_specific_specialty1`
    FOREIGN KEY (`specific_specialty_id`)
    REFERENCES `HospitalReview`.`specific_specialty` (`specific_specialty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_specific_specialty_doctor1`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `HospitalReview`.`doctor` (`doctor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`doctor_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`doctor_language` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`doctor_language` (
  `doctor_id` INT NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  INDEX `fk_doctor_language_doctor1_idx` (`doctor_id` ASC),
  PRIMARY KEY (`doctor_id`, `language`),
  CONSTRAINT `fk_doctor_language_doctor1`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `HospitalReview`.`doctor` (`doctor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`doctor_rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`doctor_rating` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`doctor_rating` (
  `patient_id` INT NOT NULL,
  `doctor_id` INT NOT NULL,
  `rating` INT NOT NULL,
  `is_enable` INT NOT NULL,
  INDEX `fk_doctor_rating_patient1_idx` (`patient_id` ASC),
  INDEX `fk_doctor_rating_doctor1_idx` (`doctor_id` ASC),
  PRIMARY KEY (`patient_id`, `doctor_id`),
  CONSTRAINT `fk_doctor_rating_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`patient` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_rating_doctor1`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `HospitalReview`.`doctor` (`doctor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`comment` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`comment` (
  `comment_id` INT NOT NULL AUTO_INCREMENT,
  `patient_id` INT NOT NULL,
  `doctor_id` INT NOT NULL,
  `comment_content` VARCHAR(300) NOT NULL,
  `comment_date` DATE NOT NULL,
  `comment_time` TIME NOT NULL,
  `is_enable` INT NOT NULL,
  PRIMARY KEY (`comment_id`),
  INDEX `fk_comment_patient1_idx` (`patient_id` ASC),
  INDEX `fk_comment_doctor1_idx` (`doctor_id` ASC),
  CONSTRAINT `fk_comment_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`patient` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_doctor1`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `HospitalReview`.`doctor` (`doctor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`favorite_hospital`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`favorite_hospital` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`favorite_hospital` (
  `patient_id` INT NOT NULL,
  `hospital_id` INT NOT NULL,
  INDEX `fk_favorite_hospital_patient1_idx` (`patient_id` ASC),
  PRIMARY KEY (`patient_id`, `hospital_id`),
  INDEX `fk_favorite_hospital_hospital1_idx` (`hospital_id` ASC),
  CONSTRAINT `fk_favorite_hospital_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`patient` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorite_hospital_hospital1`
    FOREIGN KEY (`hospital_id`)
    REFERENCES `HospitalReview`.`hospital` (`hospital_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HospitalReview`.`favorite_doctor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HospitalReview`.`favorite_doctor` ;

CREATE TABLE IF NOT EXISTS `HospitalReview`.`favorite_doctor` (
  `patient_id` INT NOT NULL,
  `doctor_id` INT NOT NULL,
  PRIMARY KEY (`patient_id`, `doctor_id`),
  INDEX `fk_favorite_doctor_doctor1_idx` (`doctor_id` ASC),
  CONSTRAINT `fk_favorite_doctor_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `HospitalReview`.`patient` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorite_doctor_doctor1`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `HospitalReview`.`doctor` (`doctor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `HospitalReview`;

DELIMITER $$

USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`user_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`user_BEFORE_DELETE` BEFORE DELETE ON `user` FOR EACH ROW
BEGIN
	DELETE FROM hospital WHERE old.user_id = hospital.hospital_id;
    DELETE FROM patient WHERE old.user_id = patient.patient_id;
END$$


USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`patient_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`patient_BEFORE_DELETE` BEFORE DELETE ON `patient` FOR EACH ROW
BEGIN
	DELETE FROM comment WHERE old.patient_id = comment.patient_id;
    DELETE FROM doctor_rating WHERE old.patient_id = doctor_rating.patient_id;
    DELETE FROM favorite_hospital WHERE old.patient_id = favorite_hospital.patient_id;
    DELETE FROM favorite_doctor WHERE old.patient_id = favorite_doctor.patient_id;
    DELETE FROM patient_language WHERE old.patient_id = patient_language.patient_id;
END$$


USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`hospital_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`hospital_BEFORE_DELETE` BEFORE DELETE ON `hospital` FOR EACH ROW
BEGIN
	DELETE FROM doctor WHERE doctor.hospital_id = old.hospital_id;
    DELETE FROM favorite_hospital WHERE favorite_hospital.hospital_id = old.hospital_id;
END$$


USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`general_specialty_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`general_specialty_BEFORE_DELETE` BEFORE DELETE ON `general_specialty` FOR EACH ROW
BEGIN
	UPDATE doctor SET doctor.general_specialty_id = null WHERE doctor.general_specialty_id = old.general_specialty_id;
    DELETE FROM specific_special_ty WHERE specific_specialty.general_specialty_id = old.general_specialty_id;
END$$


USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`doctor_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`doctor_BEFORE_DELETE` BEFORE DELETE ON `doctor` FOR EACH ROW
BEGIN
	DELETE FROM doctor_rating WHERE old.doctor_id = doctor_rating.doctor_id;
    DELETE FROM comment WHERE old.doctor_id = comment.doctor_id;
    DELETE FROM doctor_language WHERE old.doctor_id = doctor_language.doctor_id;
    DELETE FROM favorite_doctor WHERE old.doctor_id = favorite_doctor.doctor_id;
    DELETE FROM doctor_specific_specialty WHERE old.doctor_id = doctor_specific_specialty.doctor_id;
END$$


USE `HospitalReview`$$
DROP TRIGGER IF EXISTS `HospitalReview`.`specific_specialty_BEFORE_DELETE` $$
USE `HospitalReview`$$
CREATE DEFINER = CURRENT_USER TRIGGER `HospitalReview`.`specific_specialty_BEFORE_DELETE` BEFORE DELETE ON `specific_specialty` FOR EACH ROW
BEGIN
	 DELETE FROM doctor_specific_specialty WHERE specific_specialty.specific_specialty_id = doctor_specific_specialty.specific_specialty_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
